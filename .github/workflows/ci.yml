# ci workflow
name: ci

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

permissions:
  actions: read
  contents: read
  security-events: write

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    environment:
      name: ci
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.25
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
      - name: goreleaser-check
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: check -f .goreleaser.yml
  test:
    runs-on: ubuntu-latest
    environment:
      name: ci
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.25
      - name: run-test
        run: make test
      - name: push-coverage
        if: ${{ github.event_name == 'push' }}
        uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: ${{ github.workspace }}/cover.out
  codeql:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: [lint, test]
    environment:
      name: ci
    steps:
      - name: checkout
        uses: actions/checkout@v5
      - name: setup golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.25
      - name: init codeql
        uses: github/codeql-action/init@v3
        with:
          languages: 'go'
      - name: run analysis
        uses: github/codeql-action/analyze@v3
